/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialVoting,
  ConfidentialVotingInterface,
} from "../../contracts/ConfidentialVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "durationInSeconds",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "viewer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "TallyAccessGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "VoterRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "viewer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "allowTallyAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "voteHandle",
        type: "bytes32",
      },
      {
        internalType: "externalEuint8",
        name: "weightHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTally",
    outputs: [
      {
        internalType: "euint8",
        name: "yesHandle",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "noHandle",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "voteHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
    ],
    name: "grantMyVoteDecryptAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeTallyPublic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "registerVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "voteHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
    ],
    name: "verifyVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162001572380380620015728339810160408190526200003391620002fb565b6200019d620000d3604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301515f80516020620015528339815191528054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f8111620001f15760405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f73697469766500000000000000604482015260640160405180910390fd5b5f80546001600160a01b031916331781556200020d9062000234565b6001556200021b5f62000234565b6002556200022a814262000313565b6003555062000364565b5f6200024560ff831660026200024b565b92915050565b5f805160206200155283398151915254604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90620002b0908790879060040162000333565b6020604051808303815f875af1158015620002cd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002f39190620002fb565b949350505050565b5f602082840312156200030c575f80fd5b5051919050565b808201808211156200024557634e487b7160e01b5f52601160045260245ffd5b82815260408101605483106200035757634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b6111e080620003725f395ff3fe608060405234801561000f575f80fd5b50600436106100cf575f3560e01c8063c3c5a5471161007d578063da1f12ab11610058578063da1f12ab146101b4578063dd2f3120146101bc578063f851a440146101cf575f80fd5b8063c3c5a5471461016c578063c503e26d1461018e578063d55e7272146101a1575f80fd5b80636dffd475116100ad5780636dffd475146101365780637136f5c314610149578063b3c194d514610164575f80fd5b806309eef43e146100d35780631ea736e01461010a5780632c9ad1e414610121575b5f80fd5b6100f56100e1366004610f18565b60056020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61011360035481565b604051908152602001610101565b61013461012f366004610f76565b6101f9565b005b610134610144366004610fbe565b6102a0565b60015460025460408051928352602083019190915201610101565b6101346103f4565b6100f561017a366004610f18565b60046020525f908152604090205460ff1681565b61013461019c366004610fbe565b610454565b6101346101af366004610ff4565b610534565b612711610113565b6101346101ca366004610f76565b61077e565b5f546101e1906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b335f9081526004602052604090205460ff1661024d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd081c9959da5cdd195c995960921b60448201526064015b60405180910390fd5b5f61028d8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061080792505050565b9050610299813361081b565b5050505050565b5f546001600160a01b031633146102e65760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606401610244565b6001600160a01b03831661032b5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401610244565b6001600160a01b0383165f9081526004602052604090205460ff16156103935760405162461bcd60e51b815260206004820152601260248201527f416c7265616479207265676973746572656400000000000000000000000000006044820152606401610244565b6001600160a01b0383165f8181526004602052604090819020805460ff19166001179055517f806d4dd48ede6c7c0dd28b62a0ea9a207bb85d93ae5d91f2732a50b1a5fa4ed8906103e79085908590611071565b60405180910390a2505050565b5f546001600160a01b0316331461043a5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606401610244565b61044560015461082d565b5061045160025461082d565b50565b5f546001600160a01b0316331461049a5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606401610244565b6001600160a01b0383166104df5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401610244565b6104eb6001548461081b565b506104f86002548461081b565b50826001600160a01b03167fca2917213adf6c679abf30e61979d6c89023af9b36d4c65de66ede0992a3e1d183836040516103e7929190611071565b60035442106105855760405162461bcd60e51b815260206004820152600d60248201527f566f74696e6720636c6f736564000000000000000000000000000000000000006044820152606401610244565b335f9081526004602052604090205460ff166105d45760405162461bcd60e51b815260206004820152600e60248201526d139bdd081c9959da5cdd195c995960921b6044820152606401610244565b335f9081526005602052604090205460ff16156106335760405162461bcd60e51b815260206004820152600d60248201527f416c726561647920766f746564000000000000000000000000000000000000006044820152606401610244565b5f6106738786868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061080792505050565b90505f6106b58787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061080792505050565b90505f6106c2600161083b565b90505f6106cf8484610850565b90505f6106e56106df848761087e565b85610850565b90506106f3600154836108ac565b60015560025461070390826108ac565b600255335f8181526005602052604090819020805460ff19166001179055517f1f42239b48b503e3dfaf0ba9d3094e44ec6412593db709afb46e847fbf35071e90610751908a908a90611071565b60405180910390a26107646001546108da565b506107706002546108da565b505050505050505050505050565b5f6107be8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061080792505050565b90505f6107d3826107ce5f61083b565b6108e5565b90505f6107e4836107ce600161083b565b90505f6107f18383610913565b90506107fd813361081b565b5050505050505050565b5f61081483836002610941565b9392505050565b5f6108268383610a4e565b5090919050565b5f61083782610ac2565b5090565b5f61084a8260ff166002610b40565b92915050565b5f826108625761085f5f61083b565b92505b81610873576108705f61083b565b91505b61081483835f610bea565b5f826108905761088d5f61083b565b92505b816108a15761089e5f61083b565b91505b61081483835f610cba565b5f826108be576108bb5f61083b565b92505b816108cf576108cc5f61083b565b91505b61081483835f610d44565b5f6108378230610a4e565b5f826108f7576108f45f61083b565b92505b81610908576109055f61083b565b91505b61081483835f610dce565b5f82610925576109225f610e58565b92505b81610936576109335f610e58565b91505b61081483835f610e73565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f915f805160206111b4833981519152916001600160a01b039091169063196d0b9b906109a79088903390899089906004016110bf565b6020604051808303815f875af11580156109c3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e79190611131565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610a30575f80fd5b505af1158015610a42573d5f803e3d5ffd5b50505050509392505050565b5f805160206111b48339815191528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b158015610aa7575f80fd5b505af1158015610ab9573d5f803e3d5ffd5b50505050505050565b6040805160018082528183019092525f805160206111b4833981519152915f91906020808301908036833701905050905082815f81518110610b0657610b06611148565b60209081029190910101528154604051637d6e912360e11b81526001600160a01b039091169063fadd224690610a9090849060040161115c565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f915f805160206111b4833981519152916001600160a01b0390911690639cd07acb90610ba2908790879060040161119f565b6020604051808303815f875af1158015610bbe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be29190611131565b949350505050565b5f808215610bfd5750600160f81b610c00565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630afe14ad60e31b815260048101879052602481018690526001600160f81b0319831660448201525f805160206111b4833981519152916001600160a01b0316906357f0a568906064015b6020604051808303815f875af1158015610c8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb09190611131565b9695505050505050565b5f808215610ccd5750600160f81b610cd0565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f805160206111b4833981519152916001600160a01b03169063182b6d9890606401610c70565b5f808215610d575750600160f81b610d5a565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f805160206111b4833981519152916001600160a01b03169063117b2f3890606401610c70565b5f808215610de15750600160f81b610de4565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163f77f3f1d60e01b815260048101879052602481018690526001600160f81b0319831660448201525f805160206111b4833981519152916001600160a01b03169063f77f3f1d90606401610c70565b5f61084a82610e67575f610e6a565b60015b60ff165f610b40565b5f808215610e865750600160f81b610e89565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516363a2db2960e01b815260048101879052602481018690526001600160f81b0319831660448201525f805160206111b4833981519152916001600160a01b0316906363a2db2990606401610c70565b80356001600160a01b0381168114610f13575f80fd5b919050565b5f60208284031215610f28575f80fd5b61081482610efd565b5f8083601f840112610f41575f80fd5b50813567ffffffffffffffff811115610f58575f80fd5b602083019150836020828501011115610f6f575f80fd5b9250929050565b5f805f60408486031215610f88575f80fd5b83359250602084013567ffffffffffffffff811115610fa5575f80fd5b610fb186828701610f31565b9497909650939450505050565b5f805f60408486031215610fd0575f80fd5b610fd984610efd565b9250602084013567ffffffffffffffff811115610fa5575f80fd5b5f805f805f8060808789031215611009575f80fd5b8635955060208701359450604087013567ffffffffffffffff8082111561102e575f80fd5b61103a8a838b01610f31565b90965094506060890135915080821115611052575f80fd5b5061105f89828a01610f31565b979a9699509497509295939492505050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b605481106110bb57634e487b7160e01b5f52602160045260245ffd5b9052565b8481525f60206001600160a01b03861660208401526080604084015284518060808501525f5b818110156111015786810183015185820160a0015282016110e5565b505f60a0828601015260a0601f19601f83011685010192505050611128606083018461109f565b95945050505050565b5f60208284031215611141575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f9190848201906040850190845b8181101561119357835183529284019291840191600101611177565b50909695505050505050565b82815260408101610814602083018461109f56fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a164736f6c6343000818000a9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701";

type ConfidentialVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialVoting__factory extends ContractFactory {
  constructor(...args: ConfidentialVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    durationInSeconds: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(durationInSeconds, overrides || {});
  }
  override deploy(
    durationInSeconds: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(durationInSeconds, overrides || {}) as Promise<
      ConfidentialVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfidentialVoting__factory {
    return super.connect(runner) as ConfidentialVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialVotingInterface {
    return new Interface(_abi) as ConfidentialVotingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialVoting {
    return new Contract(address, _abi, runner) as unknown as ConfidentialVoting;
  }
}
